import org.apache.tools.ant.filters.ReplaceTokens

plugins {
    id 'java'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()

    maven {
        url 'https://papermc.io/repo/repository/maven-public/'
    }

    maven {
        url 'https://maven.enginehub.org/repo/'
    }

    maven {
        url 'https://jitpack.io'
    }

    maven {
        url 'https://mvn.intellectualsites.com/content/repositories/snapshots/'
        content {
            includeModule('com.intellectualsites', 'Pipeline')
        }
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.0.5'
    compileOnly 'com.plotsquared:PlotSquared-Core:6.2.1'
    compileOnly 'com.github.TechFortress:GriefPrevention:16.17.1'
    compileOnly 'dev.gecko.gsit:GSit:1.0.4' //Local maven
    implementation 'com.github.BeYkeRYkt:LightAPI:5.1.0-Bukkit'
}

group = 'com.mira.furnitureengine'
version = '1.6.3-SNAPSHOT'

java.sourceCompatibility = JavaVersion.VERSION_17
java.targetCompatibility = JavaVersion.VERSION_17

tasks {
    processResources {
        from("${project.rootDir}/src/main/resources") {
            duplicatesStrategy = DuplicatesStrategy.INCLUDE
            project.properties.findAll().each {
                prop ->
                    if (prop.value != null && prop.value instanceof java.lang.String) {
                        filter(ReplaceTokens, tokens: [(prop.key): prop.value])
                        filter(ReplaceTokens, tokens: [('project.' + prop.key): prop.value])
                    }
            }
        }
    }

    compileJava {
        options.compilerArgs += ["-Xlint:all", "-Xlint:-processing"]
        options.encoding = 'Cp1252'
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }
}
